syntax = "proto3";

package order;

option go_package = "github.com/order-api-microservices/proto/order";

import "google/protobuf/timestamp.proto";

service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (OrderResponse) {}
  rpc GetOrder(GetOrderRequest) returns (OrderResponse) {}
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (OrderResponse) {}
  rpc CancelOrder(CancelOrderRequest) returns (OrderResponse) {}
  rpc ListUserOrders(ListUserOrdersRequest) returns (ListOrdersResponse) {}
  rpc ListProviderOrders(ListProviderOrdersRequest) returns (ListOrdersResponse) {}
  rpc TrackOrder(TrackOrderRequest) returns (stream OrderLocationUpdate) {}
  
  // New methods for provider assignment and tracking
  rpc AssignProvider(AssignProviderRequest) returns (OrderResponse) {}
  rpc AcceptOrder(AcceptOrderRequest) returns (OrderResponse) {}
  rpc RejectOrder(RejectOrderRequest) returns (OrderResponse) {}
  rpc UpdateLocation(UpdateLocationRequest) returns (UpdateLocationResponse) {}
}

message CreateOrderRequest {
  string user_id = 1;
  OrderType order_type = 2;
  Location pickup_location = 3;
  Location destination_location = 4;
  repeated OrderItem items = 5;
  PaymentMethod payment_method = 6;
  string notes = 7;
}

message OrderItem {
  string item_id = 1;
  string name = 2;
  int32 quantity = 3;
  float price = 4;
  map<string, string> properties = 5;
}

message GetOrderRequest {
  string order_id = 1;
}

message UpdateOrderStatusRequest {
  string order_id = 1;
  OrderStatus status = 2;
  string updated_by = 3;
  string notes = 4;
}

message CancelOrderRequest {
  string order_id = 1;
  string cancelled_by = 2;
  string reason = 3;
}

message ListUserOrdersRequest {
  string user_id = 1;
  int32 page = 2;
  int32 limit = 3;
  OrderStatus status = 4;
}

message ListProviderOrdersRequest {
  string provider_id = 1;
  int32 page = 2;
  int32 limit = 3;
  OrderStatus status = 4;
}

message ListOrdersResponse {
  repeated Order orders = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

message TrackOrderRequest {
  string order_id = 1;
}

message OrderLocationUpdate {
  string order_id = 1;
  string provider_id = 2;
  Location current_location = 3;
  float estimated_arrival_minutes = 4;
  google.protobuf.Timestamp timestamp = 5;
}

message Order {
  string id = 1;
  string user_id = 2;
  string provider_id = 3;
  OrderType order_type = 4;
  OrderStatus status = 5;
  Location pickup_location = 6;
  Location destination_location = 7;
  repeated OrderItem items = 8;
  float total_price = 9;
  float platform_fee = 10;
  float provider_fee = 11;
  string transaction_id = 12;
  string blockchain_tx_hash = 13;
  PaymentMethod payment_method = 14;
  string notes = 15;
  google.protobuf.Timestamp created_at = 16;
  google.protobuf.Timestamp updated_at = 17;
  repeated OrderStatusHistory status_history = 18;
}

message Location {
  double latitude = 1;
  double longitude = 2;
  string address = 3;
  string postal_code = 4;
  string city = 5;
  string country = 6;
  map<string, string> additional_info = 7;
}

message OrderStatusHistory {
  OrderStatus status = 1;
  string updated_by = 2;
  string notes = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message OrderResponse {
  Order order = 1;
  string message = 2;
  bool success = 3;
}

enum OrderType {
  ORDER_TYPE_UNSPECIFIED = 0;
  ORDER_TYPE_RIDE = 1;
  ORDER_TYPE_FOOD_DELIVERY = 2;
  ORDER_TYPE_PACKAGE_DELIVERY = 3;
  ORDER_TYPE_GROCERY_DELIVERY = 4;
  ORDER_TYPE_SERVICE_BOOKING = 5;
}

enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_CREATED = 1;
  ORDER_STATUS_PAYMENT_PENDING = 2;
  ORDER_STATUS_PAYMENT_COMPLETED = 3;
  ORDER_STATUS_PROVIDER_ASSIGNED = 4;
  ORDER_STATUS_PROVIDER_ACCEPTED = 5;
  ORDER_STATUS_PROVIDER_REJECTED = 6;
  ORDER_STATUS_IN_PROGRESS = 7;
  ORDER_STATUS_PICKED_UP = 8;
  ORDER_STATUS_IN_TRANSIT = 9;
  ORDER_STATUS_ARRIVED = 10;
  ORDER_STATUS_DELIVERED = 11;
  ORDER_STATUS_COMPLETED = 12;
  ORDER_STATUS_CANCELLED = 13;
  ORDER_STATUS_REFUNDED = 14;
  ORDER_STATUS_DISPUTED = 15;
}

enum PaymentMethod {
  PAYMENT_METHOD_UNSPECIFIED = 0;
  PAYMENT_METHOD_CREDIT_CARD = 1;
  PAYMENT_METHOD_DEBIT_CARD = 2;
  PAYMENT_METHOD_DIGITAL_WALLET = 3;
  PAYMENT_METHOD_CASH = 4;
  PAYMENT_METHOD_CRYPTO = 5;
}

// New message types for provider assignment and tracking
message AssignProviderRequest {
  string order_id = 1;
  string provider_id = 2; // Optional for manual assignment, if empty system will auto-assign
}

message AcceptOrderRequest {
  string order_id = 1;
  string provider_id = 2;
  Location current_location = 3; // Optional initial location
}

message RejectOrderRequest {
  string order_id = 1;
  string provider_id = 2;
  string reason = 3;
}

message UpdateLocationRequest {
  string order_id = 1;
  string provider_id = 2;
  Location location = 3;
}

message UpdateLocationResponse {
  bool success = 1;
  string message = 2;
  float estimated_arrival_minutes = 3;
} 